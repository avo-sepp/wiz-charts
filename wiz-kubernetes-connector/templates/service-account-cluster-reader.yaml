{{- if .Values.clusterReader.installRbac }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- with .Values.clusterReader.serviceAccount.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}-token
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    kubernetes.io/service-account.name: {{ .Values.clusterReader.serviceAccount.name }}
    {{- with .Values.clusterReader.secret.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["endpoints", "namespaces", "persistentvolumeclaims", "persistentvolumes", "pods", "serviceaccounts", "services", "nodes"]
    verbs: ["list"]
  - apiGroups: ["apps"]
    resources: ["controllerrevisions", "daemonsets", "deployments","replicasets", "statefulsets"]
    verbs: ["list"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterrolebindings","clusterroles","rolebindings", "roles"]
    verbs: ["list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list"]
  - apiGroups: ["batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingressclasses", "ingresses", "networkpolicies"]
    verbs: ["list"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["list"]
  - apiGroups: ["networking.istio.io"]
    resources: ["gateways","virtualservices"]
    verbs: ["list"]
  {{- if .Values.clusterReader.enableListSecret }}
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["list"]
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.clusterReader.serviceAccount.name }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  {{ .Values.clusterReader.serviceAccount.name }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.clusterReader.serviceAccount.name }}
  namespace: {{ .Release.Namespace | quote }}
{{- end }}
